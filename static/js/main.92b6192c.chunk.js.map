{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["module","exports","Filter","value","onChange","className","s","filterWrapper","type","filterInput","prototype","PropTypes","string","func","isRequired","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","reset","preventDefault","form","input","pattern","title","required","btn","ContactListItem","contact","onDeleteContact","contactItem","btnDel","onClick","id","shape","ContactList","visibleContacts","contactList","map","arrayOf","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","filter","setFilter","onVisibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","data","find","alert","uuidv4","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92b6192c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__pD_9k\",\"input\":\"ContactForm_input__3pxaZ\",\"btn\":\"ContactForm_btn__2lSrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__cafe1\",\"filterInput\":\"Filter_filterInput__3oels\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__1Fnm_\",\"btnDel\":\"ContactListItem_btnDel__7I5-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__18ze5\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filterWrapper}>\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={s.filterInput}\n      />\n    </label>\n  </div>\n);\n\nFilter.prototype = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport { useState } from 'react';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name: name, number: number });\n\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={s.contactItem}>\n      {contact.name}: {contact.number}\n      <button\n        type=\"button\"\n        className={s.btnDel}\n        onClick={() => onDeleteContact(contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.prototype = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ visibleContacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {visibleContacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          contact={contact}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.prototype = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const submitFromForm = data => {\n    const { name } = data;\n    const nameAlreadyIs = contacts.find(contact => contact.name === name);\n\n    if (nameAlreadyIs) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    data.id = uuidv4();\n    setContacts(state => [...state, data]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    if (filter) {\n      const normalizedFilter = filter.toLowerCase();\n      const newContactsArr = contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter),\n      );\n      return newContactsArr;\n    }\n    return contacts;\n  };\n\n  const deleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  const onVisibleContacts = getVisibleContacts();\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={submitFromForm} />\n      <h2> Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        visibleContacts={onVisibleContacts}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}